---
import MainLayout from '@/layouts/MainLayout.astro';
import Particles from '@/components/common/Particles.astro';
import '@/assets/styles/index.css';
import '@/assets/styles/hero.css';
import '@/assets/styles/about.css';
import '@/assets/styles/skills.css';
import '@/assets/styles/education.css';
import '@/assets/styles/experience.css';
import '@/assets/styles/projects.css';
import '@/assets/styles/contact.css';

//JSON data
import heroData from '@/data/hero.json';
import aboutData from '@/data/about.json';
import skillsData from '@/data/skills.json';
import educationData from '@/data/education.json';
import experienceData from '@/data/experience.json';
import projectsData from '@/data/projects.json';
import contactData from '@/data/contact.json';

import SkillIcons from '@/components/common/SkillIcons.astro';

const meta = {
  title: 'Prakash Raj | Data Scientist & Engineer',
  description:
    'Passionate full stack developer specializing in modern web technologies. Creating beautiful, functional websites and applications. View my portfolio, projects, and get in touch.',
  image: '/assets/images/PR.png',
  url: Astro.url.href,
  siteName: 'Prakash Raj',
};
---

<MainLayout meta={meta}>
  {/* Animated Background */}
  <Particles />
  {/* Navigation is handled by MainLayout's Navbar */}

  {/* Hero Section */}
  <section id="home" class="hero scroll-offset">
    <div class="container">
      <div class="hero-content">
        <h1 class="greeting">{heroData.greeting}</h1>
        <h2 class="name">{heroData.title} <span class="highlight">{heroData.name}</span></h2>
        <div class="typing-wrapper">
          <p>
            I'm a <span class="typing" data-words={JSON.stringify(heroData.typingWords)}></span>
          </p>
        </div>
        <div class="cta-buttons">
          {
            heroData.buttons?.hireMe && (
              <a href={heroData.buttons.hireMe.link} class="btn primary-btn">
                {heroData.buttons.hireMe.text}
              </a>
            )
          }
          {
            heroData.buttons?.projects && (
              <a href={heroData.buttons.projects.link} class="btn secondary-btn">
                {heroData.buttons.projects.text}
              </a>
            )
          }
        </div>
        <div class="social-links">
          {
            heroData.socialLinks &&
              Object.entries(heroData.socialLinks).map(([key, social]) => (
                <a href={social.url} target="_blank" class="social-icon">
                  <i class={social.icon} />
                </a>
              ))
          }
        </div>
      </div>
    </div>
    {
      heroData.scrollIndicator && (
        <div class="scroll-indicator">
          <span class="scroll-text">{heroData.scrollIndicator.text}</span>
          <div class="scroll-arrow">
            <i class={heroData.scrollIndicator.icon} />
          </div>
        </div>
      )
    }
  </section>

  {/* About Section */}
  <section id="about" class="about scroll-offset">
    <div class="container">
      <div class="section-header">
        <h2>{aboutData.title} <span class="highlight">{aboutData.highlight}</span></h2>
        <div class="underline"></div>
      </div>
      <div class="about-content">
        <div class="about-image">
          <div class="image-wrapper">
            <div class="image-outline"></div>
            <div class="image-placeholder">
              <img src={aboutData.image.src} alt={aboutData.image.alt} class="profile-image" />
            </div>
          </div>
        </div>
        <div class="about-text">
          <p class="intro">{aboutData.intro}</p>
          {aboutData.description.map((desc) => <p>{desc}</p>)}
          {
            aboutData.resume && (
              <a href={aboutData.resume.link} target="_blank" class="btn primary-btn">
                {aboutData.resume.text}
              </a>
            )
          }
        </div>
      </div>
    </div>
  </section>

  {/* Skills Section */}
  <section id="skills" class="skills scroll-offset">
    <div class="container">
      <div class="section-header">
        <h2>{skillsData.title} <span class="highlight">{skillsData.highlight}</span></h2>
        <div class="underline"></div>
      </div>
      {/* Marquee Skill Icons */}
      <SkillIcons />
    </div>
  </section>

  {/* Education Section */}
  <section id="education" class="education scroll-offset">
    <div class="container">
      <div class="section-header">
        <h2>{educationData.title} <span class="highlight">{educationData.highlight}</span></h2>
        <div class="underline"></div>
      </div>
      <div class="education-content">
        {
          educationData.education.map((edu) => (
            <div class="education-item">
              <div class="education-header">
                <div class="education-info">
                  <h3 class="institution">{edu.institution}</h3>
                  <p class="degree">{edu.degree}</p>
                  <p class="coursework">
                    <strong>Coursework:</strong> {edu.coursework}
                  </p>
                  <div class="activities">
                    <p>
                      <strong>Extracurricular Activities:</strong>
                    </p>
                    <ul>
                      {edu.extracurricularActivities.map((activity) => (
                        <li>{activity}</li>
                      ))}
                    </ul>
                  </div>
                </div>
                <div class="education-year">{edu.year}</div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  {/* Experience Section */}
  <section id="experience" class="experience scroll-offset">
    <div class="container">
      <div class="section-header">
        <h2>{experienceData.title} <span class="highlight">{experienceData.highlight}</span></h2>
        <div class="underline"></div>
      </div>
      <div class="experience-content">
        {
          experienceData.experiences.map((exp) => (
            <div class="experience-item">
              <div class="experience-header">
                <div class="experience-info">
                  <h3 class="position">{exp.position}</h3>
                  <p class="company">{exp.company}</p>
                </div>
                <div class="experience-period">{exp.period}</div>
              </div>
              <ul class="responsibilities">
                {exp.responsibilities.map((responsibility) => (
                  <li>{responsibility}</li>
                ))}
              </ul>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  {/* Projects Section */}
  <section id="projects" class="projects scroll-offset">
    <div class="container">
      <div class="section-header">
        <h2>{projectsData.title} <span class="highlight">{projectsData.highlight}</span></h2>
        <div class="underline"></div>
      </div>
      <div class="project-filters">
        {
          projectsData.filters.map((filter) => (
            <button
              class={`filter-btn ${filter.id === 'all' ? 'active' : ''}`}
              data-filter={filter.id}
            >
              {filter.text}
            </button>
          ))
        }
      </div>
      <div class="projects-container" id="projects-container">
        {
          projectsData.projects.map((project) => (
            <div class="project-card" data-category={project.category}>
              <div class="project-image">
                {<img src={project.image} alt={project.title} />}
                <div class="project-overlay">
                  <div class="project-links">
                    {project.links?.live && (
                      <a href={project.links.live} target="_blank" class="project-link">
                        <i class="fas fa-external-link-alt" />
                      </a>
                    )}
                    {project.links?.github && (
                      <a href={project.links.github} target="_blank" class="project-link">
                        <i class="fab fa-github" />
                      </a>
                    )}
                  </div>
                </div>
              </div>
              <div class="project-info">
                <h3 class="ptitle">{project.title}</h3>
                <p>{project.description}</p>
                <div class="project-tags">
                  {project.tags.map((tag) => (
                    <span>{tag}</span>
                  ))}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  {/* Contact Section */}
  <section id="contact" class="contact scroll-offset">
    <div class="container">
      <div class="section-header">
        <h2>{contactData.title} <span class="highlight">{contactData.highlight}</span></h2>
        <div class="underline"></div>
      </div>
      <div class="contact-content">
        <div class="contact-info">
          {
            contactData.contactInfo.map((contact) => (
              <div class="contact-item">
                <div class="contact-icon">
                  <i class={contact.icon} />
                </div>
                <div class="contact-text">
                  <h3>{contact.title}</h3>
                  <p>
                    <a href={contact.link} target="_blank">
                      {contact.value}
                    </a>
                  </p>
                </div>
              </div>
            ))
          }
          <div class="social-links-large">
            {
              contactData.socialLinks.map((social) => (
                <a href={social.url} target="_blank" class="social-icon-large">
                  <i class={social.icon} aria-hidden="true" />
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </section>

  {/* Footer is handled by MainLayout's Footer */}
  <script src="/scripts/index-client.js" is:inline></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const filterButtons = document.querySelectorAll('.filter-btn');
      const projectCards = document.querySelectorAll('.project-card');

      filterButtons.forEach((btn) => {
        btn.addEventListener('click', function () {
          filterButtons.forEach((b) => b.classList.remove('active'));
          this.classList.add('active');
          const filter = this.getAttribute('data-filter');
          projectCards.forEach((card) => {
            if (card instanceof HTMLElement) {
              const cardEl = card;

              if (filter === 'all' || card.getAttribute('data-category') === filter) {
                cardEl.style.display = '';
              } else {
                cardEl.style.display = 'none';
              }
            }
          });
        });
      });
    });
  </script>
</MainLayout>
