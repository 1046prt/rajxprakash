---
const { volume = 0.3, soundUrl = '/click.mp3', enableOnMobile = true } = Astro.props;
---

<script define:vars={{ volume, soundUrl, enableOnMobile }}>
  class KeypressSound {
    constructor(volume, soundUrl, enableOnMobile) {
      this.volume = volume;
      this.soundUrl = soundUrl;
      this.enableOnMobile = enableOnMobile;
      this.audio = null;
      this.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
      );
      this.isInitialized = false;

      this.init();
    }

    init() {
      if (this.isMobile && !this.enableOnMobile) {
        return;
      }

      this.audio = new Audio(this.soundUrl);
      this.audio.volume = this.volume;
      this.audio.preload = 'auto';
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          this.addEventListeners();
        });
      } else {
        setTimeout(() => this.addEventListeners(), 100);
      }
    }

    addEventListeners() {
      if (this.isInitialized) return;

      this.addClickListeners();
      this.addKeyboardListeners();
      this.isInitialized = true;
    }

    playSound() {
      if (!this.audio) return;

      try {
        this.audio.currentTime = 0;
        this.audio.play().catch((e) => {});
      } catch (error) {}
    }

    addClickListeners() {
      document.addEventListener(
        'click',
        (e) => {
          const target = e.target;
          const link = target.closest('a');

          if (link) {
            const href = link.getAttribute('href');
            const isNavLink = link.closest('.nav-links') || link.closest('.logo');

            if (isNavLink && (href === '/' || href === '/blog' || href?.startsWith('/blog'))) {
              e.preventDefault();

              this.playSound();

              setTimeout(() => {
                window.location.href = href;
              }, 150);

              return;
            }

            if (isNavLink) {
              this.playSound();
              return;
            }
          }

          const clickableElement = target.closest(
            'button, [role="button"], input[type="button"], input[type="submit"], input[type="reset"], .clickable, [data-sound]'
          );

          if (clickableElement) {
            this.playSound();
          }
        },
        true
      );
    }

    addKeyboardListeners() {
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          const target = e.target;
          const isInteractive =
            target.matches('button, a, [role="button"], input, select, textarea') ||
            target.hasAttribute('data-sound') ||
            target.closest('[data-sound]');

          if (isInteractive) {
            const link = target.closest('a');
            if (link) {
              const href = link.getAttribute('href');
              const isNavLink = link.closest('.nav-links') || link.closest('.logo');

              if (isNavLink && (href === '/' || href === '/blog' || href?.startsWith('/blog'))) {
                e.preventDefault();
                this.playSound();

                setTimeout(() => {
                  window.location.href = href;
                }, 150);

                return;
              }
            }

            this.playSound();
          }
        }
      });
    }

    trigger() {
      this.playSound();
    }

    setVolume(newVolume) {
      this.volume = Math.max(0, Math.min(1, newVolume));
      if (this.audio) {
        this.audio.volume = this.volume;
      }
    }

    destroy() {
      if (this.audio) {
        this.audio = null;
      }
      this.isInitialized = false;
    }

    reinit() {
      if (!this.isInitialized) {
        this.addEventListeners();
      }
    }
  }

  function initializeKeypressSound() {
    if (!window.keypressSound) {
      window.keypressSound = new KeypressSound(volume, soundUrl, enableOnMobile);
    } else {
      window.keypressSound.reinit();
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeKeypressSound);
  } else {
    initializeKeypressSound();
  }

  window.addEventListener('load', initializeKeypressSound);
</script>
